/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel_booking;
import hotel_booking.javaconnect;
import java.sql.*;
import java.time.LocalDate;
import java.time.Period;
import javax.swing.JOptionPane;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author my pc
 */
public class room_management_page1 extends javax.swing.JFrame {
    Connection con= javaconnect.connectdb();
    PreparedStatement ps = null;
    ResultSet rs=null;
    DefaultTableModel tbModel = new DefaultTableModel();
    
    /**
     * Creates new form room_management_page1
     */
    public room_management_page1() {
        initComponents();
        javaconnect.connectdb();
        Select();
        txt_room_num.setEnabled(false);
    }
    private void Select() {
            String[] columnNames = {"ROOMNUM", "ROOMTYPE", "BED", "PRICE", "STATUS"};
            tbModel.setColumnIdentifiers(columnNames);
            tbModel.setRowCount(0);  // Clear table before repopulating

            String sql = "SELECT ROOMNUM, ROOMTYPE, BED, PRICE, STATUS FROM ROOMMANAGEMENT1";

            try {
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
                int x = 0;

                while (rs.next()) {
                    String rm = rs.getString("ROOMNUM");
                    String rtyp = rs.getString("ROOMTYPE");
                    String bed = rs.getString("BED");
                    String price = rs.getString("PRICE");
                    String stats = rs.getString("STATUS");

                    tbModel.addRow(new Object[] {rm, rtyp, bed, price, stats});
                    x++;
                }

                jTable1.setVisible(x > 0);

                if (x == 0) {
                    JOptionPane.showMessageDialog(this, "No records found.");
                }

            } catch (SQLException err) {
                JOptionPane.showMessageDialog(this, "Error retrieving data: " + err.getMessage());
            } finally {
                try { if (rs != null) rs.close(); } catch (SQLException e) {}
                try { if (ps != null) ps.close(); } catch (SQLException e) {}
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bt_add = new javax.swing.JButton();
        bt_delete = new javax.swing.JButton();
        txt_room_num = new javax.swing.JTextField();
        txt_price = new javax.swing.JTextField();
        cb_roomtype = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cb_status = new javax.swing.JComboBox<>();
        txt_bed = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        cb_roomnum = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        checkbox_addrn = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 593));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Room Number:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 336, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Room Type:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 406, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Bed:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 456, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Price:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 505, -1, -1));

        bt_add.setBackground(new java.awt.Color(204, 255, 204));
        bt_add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bt_add.setText("Add");
        bt_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addActionPerformed(evt);
            }
        });
        jPanel1.add(bt_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(662, 538, -1, -1));

        bt_delete.setBackground(new java.awt.Color(255, 204, 204));
        bt_delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bt_delete.setText("Delete");
        bt_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_deleteActionPerformed(evt);
            }
        });
        jPanel1.add(bt_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(829, 538, -1, -1));

        txt_room_num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_room_numActionPerformed(evt);
            }
        });
        jPanel1.add(txt_room_num, new org.netbeans.lib.awtextra.AbsoluteConstraints(797, 332, 137, 31));
        jPanel1.add(txt_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 501, 111, 31));

        cb_roomtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room", "Single Room", "Double Room", "Triple Room", "Quad Room", " " }));
        cb_roomtype.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb_roomtypeMouseClicked(evt);
            }
        });
        cb_roomtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_roomtypeActionPerformed(evt);
            }
        });
        jPanel1.add(cb_roomtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 401, 272, 33));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Room Management");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 29, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Status:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 456, -1, -1));

        cb_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Unavailable", " " }));
        cb_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_statusActionPerformed(evt);
            }
        });
        jPanel1.add(cb_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(569, 456, -1, -1));
        jPanel1.add(txt_bed, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 452, 140, 31));

        btn_update.setBackground(new java.awt.Color(255, 255, 204));
        btn_update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        jPanel1.add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 538, -1, -1));

        cb_roomnum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room Number", "R01", "R02", "R03", "R04", "R05", "R06", "R07", "R08", "R09", "R10", "R11", "R12", "R13", "R14", "R15", "R16", "R17", "R18", "R19", "R20" }));
        jPanel1.add(cb_roomnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 336, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Additional Room Number:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(608, 336, -1, -1));

        checkbox_addrn.setText("Add Other Room Number");
        checkbox_addrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_addrnActionPerformed(evt);
            }
        });
        jPanel1.add(checkbox_addrn, new org.netbeans.lib.awtextra.AbsoluteConstraints(608, 369, -1, -1));

        jPanel10.setBackground(new java.awt.Color(165, 157, 173));

        jButton17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton17.setForeground(new java.awt.Color(32, 33, 67));
        jButton17.setText("Booking Details");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton18.setForeground(new java.awt.Color(32, 33, 67));
        jButton18.setText("Room Management");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(255, 255, 255, 80));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel_booking/logo 120.png"))); // NOI18N
        jLabel12.setText("jLabel2");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel11.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 110));

        jButton19.setText("Log out");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton20.setForeground(new java.awt.Color(32, 33, 67));
        jButton20.setText("Sales Report");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jButton19)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 631));

        jTable1.setModel(tbModel);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 780, 260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addActionPerformed
        try {
            String roomNumber;

                if (checkbox_addrn.isSelected()) {
                    roomNumber = txt_room_num.getText().trim();

                    if (!roomNumber.startsWith("R") || roomNumber.length() < 2) {
                        JOptionPane.showMessageDialog(null, "Invalid room format! Must start with 'R'.");
                        return;
                    }

                    try {
                        int number = Integer.parseInt(roomNumber.substring(1));
                        if (number < 21 || number > 30) {
                            JOptionPane.showMessageDialog(null, "Room number must be between R21 and R30.");
                            return;
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Invalid number format in room code!");
                        return;
                    }

                    // 🔎 Check if room already exists
                    String checkSql = "SELECT COUNT(*) FROM ROOMMANAGEMENT1 WHERE ROOMNUM = ?";
                    PreparedStatement checkStmt = con.prepareStatement(checkSql);
                    checkStmt.setString(1, roomNumber);
                    ResultSet rs = checkStmt.executeQuery();
                    if (rs.next()) {
                        int count = rs.getInt(1);
                        if (count > 0) {
                            JOptionPane.showMessageDialog(null, "Room number already exists!");
                            return;
                        }
                    }

                } else {
                    if (cb_roomnum.getSelectedItem() == null) {
                        JOptionPane.showMessageDialog(null, "Please select a room number.");
                        return;
                    }
                    roomNumber = cb_roomnum.getSelectedItem().toString();
                    String checkSql = "SELECT COUNT(*) FROM ROOMMANAGEMENT1 WHERE ROOMNUM = ?";
                    PreparedStatement checkStmt = con.prepareStatement(checkSql);
                    checkStmt.setString(1, roomNumber);
                    ResultSet rs = checkStmt.executeQuery();
                    if (rs.next()) {
                        int count = rs.getInt(1);
                        if (count > 0) {
                            JOptionPane.showMessageDialog(null, "Room number already exists!");
                            return;
                        }
                    }
                }

            // Validate and parse price
            int price;
            try {
                price = Integer.parseInt(txt_price.getText().trim());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Price must be a valid number.");
                return;
            }

            // Retrieve other field values
            if (cb_roomtype.getSelectedItem() == null || cb_status.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Please select all required fields.");
                return;
            }

            String roomType = cb_roomtype.getSelectedItem().toString();
            String bed = txt_bed.getText().trim();
            String status = cb_status.getSelectedItem().toString();

            
            if (bed.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Bed field cannot be empty.");
                return;
            }

             
            String sql = "INSERT INTO ROOMMANAGEMENT1 (ROOMNUM, ROOMTYPE, BED, PRICE, STATUS) VALUES (?, ?, ?, ?, ?)";
            ps = con.prepareStatement(sql);
            ps.setString(1, roomNumber);
            ps.setString(2, roomType);
            ps.setString(3, bed);
            ps.setInt(4, price);
            ps.setString(5, status);

            ps.executeUpdate();

            // Refresh table
            Select();  
                JOptionPane.showMessageDialog(null, "Record Added");

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(room_management_page1.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
        }
    }//GEN-LAST:event_bt_addActionPerformed

    private void bt_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_deleteActionPerformed
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to delete the item?", "Warning", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String roomNumber;
                if (checkbox_addrn.isSelected()) {
                    roomNumber = txt_room_num.getText().trim();
                } else {
                    roomNumber = cb_roomnum.getSelectedItem().toString();
                    }
                    
                if (roomNumber.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Room number is required to delete the record.");
                    return;
                }

                String sql = "DELETE FROM ROOMMANAGEMENT1 WHERE ROOMNUM = ?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, roomNumber);
                int rowsAffected = ps.executeUpdate();

                if (rowsAffected > 0) {
                    // Clear UI fields
                    txt_room_num.setText("");
                    cb_roomtype.setSelectedIndex(0);
                    txt_bed.setText("");
                    txt_price.setText("");
                    cb_status.setSelectedIndex(0);

                    // Refresh data
                    Select();
                    JOptionPane.showMessageDialog(room_management_page1.this, "Record Deleted!");
                } else {
                    JOptionPane.showMessageDialog(room_management_page1.this, "No record found with the given Room Number.");
                }
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(room_management_page1.this, "Database error: " + err.getMessage());
        }

    }//GEN-LAST:event_bt_deleteActionPerformed

    private void cb_roomtypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_roomtypeMouseClicked

    }//GEN-LAST:event_cb_roomtypeMouseClicked

    private void cb_roomtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_roomtypeActionPerformed
        if(cb_roomtype.getSelectedIndex()== 1){
            txt_bed.setText("1 Queen Size");
            txt_price.setText(Integer.toString(2999));
        }
        else if(cb_roomtype.getSelectedIndex()== 2){
            txt_bed.setText("2 Queen Size");
            txt_price.setText(Integer.toString(9599));
        }
        else if(cb_roomtype.getSelectedIndex()== 3){
            txt_bed.setText("1 King, 2 Queen Size");
            txt_price.setText(Integer.toString(15600));
        }
        else if(cb_roomtype.getSelectedIndex()== 4){
            txt_bed.setText("2 King, 2 Queen Size");
            txt_price.setText(Integer.toString(20000));
        }
    }//GEN-LAST:event_cb_roomtypeActionPerformed

    private void cb_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_statusActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        try {
            String roomNumber;
                if (checkbox_addrn.isSelected()) {
                    roomNumber = txt_room_num.getText().trim();
                } else {
                    roomNumber = cb_roomnum.getSelectedItem().toString();
                    }
            String roomType = cb_roomtype.getSelectedItem().toString();
            String bed = txt_bed.getText().trim();
            String status = cb_status.getSelectedItem().toString();

            int price;
            try {
                price = Integer.parseInt(txt_price.getText().trim());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid price format.");
                return;
            }

            if (roomNumber.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Room number is required for update.");
                return;
            }

            String sql = "UPDATE ROOMMANAGEMENT1 SET ROOMTYPE = ?, BED = ?, PRICE = ?, STATUS = ? WHERE ROOMNUM = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, roomType);
            ps.setString(2, bed);
            ps.setInt(3, price);
            ps.setString(4, status);
            ps.setString(5, roomNumber);  

            int rowsAffected = ps.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(room_management_page1.this, "Record Updated!");
                Select();
            } else {
                JOptionPane.showMessageDialog(room_management_page1.this, "No record found with the given Room Number.");
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(room_management_page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(room_management_page1.this, "Database error: " + ex.getMessage());
        }

    }//GEN-LAST:event_btn_updateActionPerformed

    private void checkbox_addrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_addrnActionPerformed
        if (checkbox_addrn.isSelected()) {
            cb_roomnum.setEnabled(false);
            txt_room_num.setEnabled(true);
        } else {
            cb_roomnum.setEnabled(true);
            txt_room_num.setEnabled(false);
        }
            
    }//GEN-LAST:event_checkbox_addrnActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        booking_details_page n=new booking_details_page();
        n.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        room_management_page1 n=new room_management_page1();
        n.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        admin_home n=new admin_home();
        n.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        status_report_page n=new status_report_page();
        n.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        int row = jTable1.getSelectedRow(); 
        if (row >= 0) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            // Retrieve each cell's value by column index
            String roomNumber = model.getValueAt(row, 0).toString();
            String roomType = model.getValueAt(row, 1).toString();
            String bed = model.getValueAt(row, 2).toString();
            String price = model.getValueAt(row, 3).toString();
            String status = model.getValueAt(row, 4).toString();

            if (roomNumber.startsWith("R")) {
                try {
                    int number = Integer.parseInt(roomNumber.substring(1));
                    if (number < 21) {
                        cb_roomnum.setSelectedItem(roomNumber);
                        cb_roomnum.setEnabled(true);
                        txt_room_num.setEnabled(false);
                    } else {
                        txt_room_num.setText(roomNumber);
                        cb_roomnum.setEnabled(false);
                        txt_room_num.setEnabled(true);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Invalid room number format: " + roomNumber);
                }
            }
            
            cb_roomtype.setSelectedItem(roomType);
            txt_bed.setText(bed);
            txt_price.setText(price);
            cb_status.setSelectedItem(status);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_room_numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_room_numActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_room_numActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(room_management_page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(room_management_page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(room_management_page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(room_management_page1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new room_management_page1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add;
    private javax.swing.JButton bt_delete;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cb_roomnum;
    private javax.swing.JComboBox<String> cb_roomtype;
    private javax.swing.JComboBox<String> cb_status;
    private javax.swing.JCheckBox checkbox_addrn;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_bed;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextField txt_room_num;
    // End of variables declaration//GEN-END:variables
}
